{"version":3,"sources":["graphics/spotify_logo.png","services/songService.js","reducers/songReducer.js","NewSongPopup.js","reducers/selectSetlistReducer.js","SelectSetlistPopup.js","services/setlistService.js","SaveSetlistPopup.js","util/helpers.js","SongList.js","AuthButton.js","services/spotifyService.js","reducers/spotifyReducer.js","ImportList.js","DeleteButton.js","EditSongPopup.js","ManageSongs.js","reducers/setlistReducer.js","reducers/accessTokenReducer.js","Home.js","App.js","index.js"],"names":["module","exports","sendSongs","songs","a","forEach","song","axios","post","sendOneSong","response","data","getAllSongs","get","allSongs","id","name","deleteSong","delete","sendEditedSong","put","songReducer","state","action","type","content","newState_1","filter","item","newState_2","concat","Button","styled","button","inputStyle","Input","input","KeyInput","connect","addSong","dispatch","songService","songWithId","props","useState","newSongName","setNewSongName","newSongArtist","setNewSongArtist","newSongKey","setNewSongKey","position","trigger","value","onChange","event","target","onClick","newSong","artist","key","setSelectSetlist","selectSetlistReducer","setlists","selectSetlist","handleSetlistChange","className","map","setlist","getAllSetlists","sendSetlist","list","newSetlistName","setNewSetlistName","setlistService","removeDuplicateSongs","length","element","result","ContainerRight","div","ContainerLeft","List","ul","Song","ListItem","li","SongContainer","SelectorContainer","existingList","setExistingList","listBuilder","setListBuilder","useEffect","selected","transferToList","origin","listItem","generateSongList","Image","img","ButtonContainer","AuthButton","href","src","SpotifyLogo","getPlaylist","token","headers","Authorization","initializeSpotifyTracks","spotifyService","tracks","spotifyReducer","SaveButton","spotifyTracks","playlistId","platlistId","accessToken","spotifyPlaylistId","setSpotifyPlaylistId","parsedSongs","parsedName","track","includes","split","artists","saveSongs","changeSongKey","i","leftPart","slice","rightPart","songToUpdate","updatedArray","handleSpotifyPlaylistIdChange","importPlaylist","Fragment","EditSongPopup","songName","setSongName","songArtist","setSongArtist","songKey","setSongKey","Container","undefined","setlistReducer","accessTokenReducer","Home","Page","NavBar","linkStyle","textDecoration","padding","initializeSetlists","initializeSongs","createAccessToken","queryString","parse","window","location","search","access_token","style","to","exact","path","render","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.977712a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spotify_logo.9050a6f6.png\";","import axios from 'axios'\n\nconst baseApiUrl = ''\n\nconst sendSongs = async songs => {\n  songs.forEach(async song => {\n    await axios.post(`${baseApiUrl}/song`, song)\n  })\n  return //await response.data\n}\n\nconst sendOneSong = async song => {\n  const response = await axios.post(`${baseApiUrl}/song`, song)\n  return response.data\n}\n\nconst getAllSongs = async () => {\n  const response = await axios.get(`${baseApiUrl}/song/all`)\n  const allSongs = {\n    id: 'allsongs',\n    name: 'All Songs',\n    songs: response.data\n  }\n  return allSongs\n}\n\nconst deleteSong = async id => {\n  const response = await axios.delete(`${baseApiUrl}/song/${id}`)\n  return response.data\n}\n\nconst sendEditedSong = async song => {\n  const response = await axios.put(`${baseApiUrl}/song`, song)\n  return response.data\n}\n\nexport default {\n  sendSongs,\n  getAllSongs,\n  sendOneSong,\n  deleteSong,\n  sendEditedSong\n}\n","import songService from '../services/songService'\n\nexport const initializeSongs = () => {\n  return async dispatch => {\n    const songs = await songService.getAllSongs()\n    dispatch({\n      type: 'INIT_SONGS',\n      content: songs\n    })\n  }\n}\n\nexport const deleteSong = id => {\n  return dispatch => {\n    dispatch({\n      type: 'DELETE_SONG',\n      content: id\n    })\n  }\n}\n\nexport const addSong = song => {\n  return async dispatch => {\n    const songWithId = await songService.sendOneSong(song)\n    dispatch({\n      type: 'ADD_SONG',\n      content: songWithId\n    })\n  }\n}\n\nconst songReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_SONGS':\n      return action.content\n    case 'DELETE_SONG':\n      const newState_1 = {\n        id: 'allsongs',\n        name: 'All Songs',\n        songs: state.songs.filter(item => item.id !== action.content)\n      }\n      return newState_1\n    case 'ADD_SONG':\n      const newState_2 = {\n        id: 'allsongs',\n        name: 'All Songs',\n        songs: state.songs.concat(action.content)\n      }\n      return newState_2\n    default:\n      return state\n  }\n}\n\nexport default songReducer\n","import React, { useState } from 'react'\nimport Popup from 'reactjs-popup'\nimport styled from 'styled-components'\nimport './styles/popup.css'\nimport { addSong } from './reducers/songReducer'\nimport { connect } from 'react-redux'\n\nconst Button = styled.button`\n  background: transparent;\n  color: palevioletred;\n  border: 2px solid palevioletred;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  left-margin: 10px;\n`\n\nconst inputStyle =\n  'border: 2px solid palevioletred; 1em;border-radius: 3px; margin: 10px;'\n\nconst Input = styled.input`\n  ${inputStyle}\n`\nconst KeyInput = styled.input`\n  ${inputStyle}\n  margin-left: 20px;\n`\n\nconst NewSongPopup = props => {\n  const [newSongName, setNewSongName] = useState('')\n  const [newSongArtist, setNewSongArtist] = useState('')\n  const [newSongKey, setNewSongKey] = useState('')\n\n  const handleNewSongNameChange = event => {\n    const newSongName = event.target.value\n    setNewSongName(newSongName)\n  }\n\n  const handleNewSongArtistChange = event => {\n    const newSongArtist = event.target.value\n    setNewSongArtist(newSongArtist)\n  }\n\n  const handleNewSongKeyChange = event => {\n    const newSongKey = event.target.value\n    setNewSongKey(newSongKey)\n  }\n\n  const saveSong = () => {\n    const newSong = {\n      name: newSongName,\n      artist: newSongArtist,\n      key: newSongKey\n    }\n    props.addSong(newSong)\n  }\n\n  return (\n    <Popup position='bottom center' trigger={<Button>NEW SONG</Button>}>\n      Name:\n      <Input\n        type='text'\n        value={newSongName}\n        onChange={handleNewSongNameChange}\n      ></Input>\n      Artist:\n      <Input\n        type='text'\n        value={newSongArtist}\n        onChange={handleNewSongArtistChange}\n      ></Input>\n      Key:\n      <KeyInput\n        type='text'\n        value={newSongKey}\n        onChange={handleNewSongKeyChange}\n      ></KeyInput>\n      <Button onClick={saveSong}>SAVE</Button>\n    </Popup>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    allSongs: state.songs\n  }\n}\n\nexport default connect(mapStateToProps, { addSong })(NewSongPopup)\n","export const setSelectSetlist = name => {\n  return async dispatch => {\n    dispatch({\n      type: 'SELECT_SETLIST',\n      content: name\n    })\n  }\n}\n\nconst selectSetlistReducer = (state = '', action) => {\n  switch (action.type) {\n    case 'SELECT_SETLIST':\n      return action.content\n    default:\n      return state\n  }\n}\n\nexport default selectSetlistReducer\n","import React from 'react'\nimport Popup from 'reactjs-popup'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport './styles/popup.css'\nimport { setSelectSetlist } from './reducers/selectSetlistReducer'\n\nconst Button = styled.button`\n  background: transparent;\n  color: palevioletred;\n  border: 2px solid palevioletred;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  float: right;\n`\n\nconst SelectSetlistPopup = props => {\n  const handleSetlistChange = name => {\n    props.setSelectSetlist(name)\n  }\n\n  return (\n    <Popup position='bottom center' trigger={<Button>SELECT SETLIST</Button>}>\n      <div className='menu'>\n        <div\n          className='menu-item'\n          onClick={() => handleSetlistChange(props.songs.name)}\n        >\n          {props.songs.name}\n        </div>\n        {props.setlists.map(setlist => {\n          return (\n            <div\n              key={setlist.id}\n              className='menu-item'\n              onClick={() => handleSetlistChange(setlist.name)}\n            >\n              {setlist.name}\n            </div>\n          )\n        })}\n      </div>\n    </Popup>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    setlists: state.setlists,\n    songs: state.songs,\n    selectSetlist: state.selectSetlist\n  }\n}\n\nexport default connect(mapStateToProps, {\n  setSelectSetlist\n})(SelectSetlistPopup)\n","import axios from 'axios'\n\nconst baseApiUrl = ''\n\nconst getAllSetlists = async () => {\n  const response = await axios.get(`${baseApiUrl}/setlist/all`)\n  return await response.data\n}\n\nconst sendSetlist = async (list, name) => {\n  const setlist = {\n    name: name,\n    songs: list.map(song => song.id)\n  }\n  const response = await axios.post(`${baseApiUrl}/setlist/`, setlist)\n  return await response.data\n}\n\nexport default { getAllSetlists, sendSetlist }\n","import React, { useState } from 'react'\nimport Popup from 'reactjs-popup'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport setlistService from './services/setlistService'\nimport './styles/popup.css'\n\nconst Button = styled.button`\n  background: transparent;\n  color: palevioletred;\n  border: 2px solid palevioletred;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n`\n\nconst inputStyle =\n  'border: 2px solid palevioletred; 1em;border-radius: 3px; margin: 10px;'\n\nconst Input = styled.input`\n  ${inputStyle}\n`\n\nconst SaveSetlistPopup = props => {\n  const [newSetlistName, setNewSetlistName] = useState('')\n\n  const handleNewSetlistNameChange = event => {\n    const newSetlistName = event.target.value\n    setNewSetlistName(newSetlistName)\n  }\n\n  const saveSetlist = () => {\n    setlistService.sendSetlist(props.songs, newSetlistName)\n  }\n\n  return (\n    <Popup position='right center' trigger={<Button>SAVE SETLIST</Button>}>\n      Setlist name:\n      <Input\n        type='text'\n        value={newSetlistName}\n        onChange={handleNewSetlistNameChange}\n      ></Input>\n      <Button onClick={saveSetlist}>Save setlist</Button>\n    </Popup>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    setlists: state.setlists\n  }\n}\n\nexport default connect(mapStateToProps)(SaveSetlistPopup)\n","export const spotifyImportSongParser = importedList => {\n  const parsedSongs = importedList.map(item => {\n    // remove unwanted parenthisis\n    let parsedName = item.track.name.includes(' (')\n      ? item.track.name.split(' (')[0]\n      : item.track.name\n    // remove unwanted hyphens\n    parsedName = parsedName.includes(' -')\n      ? parsedName.split(' -')[0]\n      : parsedName\n    return {\n      name: parsedName,\n      artist: item.track.artists[0].name,\n      key: 'Assign key'\n    }\n  })\n  return parsedSongs\n}\n\nexport const removeDuplicateSongs = (allSongs, setlist) => {\n  if (setlist.length === 0) {\n    return allSongs\n  }\n  // callback function for filter function\n  const isNotInList = element => {\n    var result = true\n    setlist.forEach(item => {\n      if (item.id === element.id) {\n        result = false\n      }\n    })\n    return result\n  }\n  const filtered = allSongs.filter(isNotInList)\n  return filtered\n}\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport NewSongPopup from './NewSongPopup'\nimport SelectSetlistPopup from './SelectSetlistPopup'\nimport SaveSetlistPopup from './SaveSetlistPopup'\nimport { removeDuplicateSongs } from './util/helpers'\n\nconst ContainerRight = styled.div`\n  float: right;\n  width: 50%;\n  background: #daf7a6;\n`\n\nconst ContainerLeft = styled.div`\n  float: left;\n  width: 50%;\n  background: #daf7a6;\n`\n\nconst List = styled.ul``\n\nconst Song = styled.div`\n  widht: 50%;\n`\n\nconst ListItem = styled.li`\n  list-style-type: none;\n  border: 2px solid palevioletred;\n  border-radius: 5px;\n  margin: 2px;\n`\n\nconst SongContainer = styled.div`\n  overflow: hidden;\n  white-space: nowrap;\n`\n\nconst SelectorContainer = styled.div`\n  height: 24px;\n`\n\nconst SongList = props => {\n  const [existingList, setExistingList] = useState([])\n  const [listBuilder, setListBuilder] = useState([])\n\n  useEffect(() => {\n    if (props.selectSetlist === 'All Songs') {\n      setExistingList(removeDuplicateSongs(props.allSongs.songs, listBuilder))\n    } else {\n      const selected = props.setlists.filter(\n        setlist => setlist.name === props.selectSetlist\n      )\n      if (selected.length > 0) {\n        setExistingList(removeDuplicateSongs(selected[0].songs, listBuilder))\n      }\n    }\n  }, [props, listBuilder])\n\n  const transferToList = (item, origin) => {\n    if (origin === 'left') {\n      setExistingList(existingList.filter(listItem => listItem !== item))\n      setListBuilder(listBuilder.concat(item))\n    }\n    if (origin === 'right') {\n      setListBuilder(listBuilder.filter(listItem => listItem !== item))\n      setExistingList(existingList.concat(item))\n    }\n  }\n\n  const generateSongList = list => {\n    if (list === 'left') {\n      return (\n        <List>\n          {existingList.map(item => {\n            return (\n              <ListItem>\n                <SongContainer>\n                  <Song onClick={() => transferToList(item, list)}>\n                    {item.name} - {item.key}\n                  </Song>\n                </SongContainer>\n              </ListItem>\n            )\n          })}\n        </List>\n      )\n    }\n    if (list === 'right') {\n      return (\n        <List>\n          {listBuilder.map(item => {\n            return (\n              <ListItem>\n                <SongContainer>\n                  <Song onClick={() => transferToList(item, list)}>\n                    {item.name} - {item.key}\n                  </Song>\n                </SongContainer>\n              </ListItem>\n            )\n          })}\n        </List>\n      )\n    }\n  }\n\n  return (\n    <div>\n      <ContainerLeft>\n        <SelectorContainer>\n          <SelectSetlistPopup />\n          <NewSongPopup />\n        </SelectorContainer>\n        {generateSongList('left')}\n      </ContainerLeft>\n      <ContainerRight>\n        <SelectorContainer>\n          <SaveSetlistPopup songs={listBuilder} />\n        </SelectorContainer>\n        {generateSongList('right')}\n      </ContainerRight>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    setlists: state.setlists,\n    allSongs: state.songs,\n    selectSetlist: state.selectSetlist\n  }\n}\n\nexport default connect(mapStateToProps)(SongList)\n","import React from 'react'\nimport styled from 'styled-components'\nimport SpotifyLogo from './graphics/spotify_logo.png'\n\nconst Button = styled.button`\n  background: transparent;\n  color: palevioletred;\n  border: 2px solid palevioletred;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  display: inline-block;\n`\nconst Image = styled.img`\n  widht: 30px;\n  height: 30px;\n`\n\nconst ButtonContainer = styled.div`\n  height: auto;\n`\n\nconst AuthButton = props => {\n  return (\n    <ButtonContainer>\n      <a href='https://setlisted-oauth-service.herokuapp.com/login'>\n        <Button>Authorize Setlisted to import playlists from Spotify</Button>\n        <Image src={SpotifyLogo} />\n      </a>\n    </ButtonContainer>\n  )\n}\n\nexport default AuthButton\n","import axios from 'axios'\n\nconst baseApiUrl = ''\n\nconst getPlaylist = async (id, token) => {\n  const response = await axios.get(`${baseApiUrl}spotify/${id}`, {\n    headers: { Authorization: token }\n  })\n  return await response.data\n}\n\nexport default { getPlaylist }\n","import spotifyService from '../services/spotifyService'\n\nexport const initializeSpotifyTracks = (id, token) => {\n  return async dispatch => {\n    const tracks = await spotifyService.getPlaylist(id, token)\n    dispatch({\n      type: 'INIT_SPOTIFY_TRACKS',\n      content: tracks\n    })\n  }\n}\n\nconst spotifyReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_SPOTIFY_TRACKS':\n      return state.concat(action.content)\n    default:\n      return state\n  }\n}\n\nexport default spotifyReducer\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport AuthButton from './AuthButton'\nimport { initializeSpotifyTracks } from './reducers/spotifyReducer'\nimport { spotifyImportSongParser } from './util/helpers'\nimport songService from './services/songService'\n\nconst ContainerRight = styled.div`\n  float: right;\n  width: 50%;\n  background: #daf7a6;\n`\n\nconst ContainerLeft = styled.div`\n  float: left;\n  width: 50%;\n  background: #daf7a6;\n`\n\nconst List = styled.ul``\n\nconst Input = styled.input`\n  width: 300px;\n`\n\nconst Song = styled.li`\n  list-style-type: none;\n  border: 2px solid palevioletred;\n  border-radius: 5px;\n  margin: 2px;\n`\nconst Button = styled.button`\n  border: 2px solid palevioletred;\n  border-radius: 5px;\n  margin: 2px;\n`\n\nconst SaveButton = styled.button`\n  border: 2px solid palevioletred;\n  border-radius: 5px;\n  margin-left: 45%;\n  margin-right 45%;\n`\n\nconst ImportList = props => {\n  const [existingList, setExistingList] = useState([])\n  const [listBuilder, setListBuilder] = useState([])\n  const [spotifyPlaylistId, setSpotifyPlaylistId] = useState('')\n\n  useEffect(() => {\n    const parsedSongs = spotifyImportSongParser(props.tracks)\n    setExistingList(parsedSongs)\n  }, [props])\n\n  const transferToList = (item, origin) => {\n    if (origin === 'left') {\n      setExistingList(existingList.filter(listItem => listItem !== item))\n      setListBuilder(listBuilder.concat(item))\n    }\n    if (origin === 'right') {\n      setListBuilder(listBuilder.filter(listItem => listItem !== item))\n      setExistingList(existingList.concat(item))\n    }\n  }\n\n  // Check if Spotify is authorized\n  if (props.accessToken === '') {\n    return (\n      <div>\n        <AuthButton />\n      </div>\n    )\n  }\n\n  const saveSongs = () => {\n    songService.sendSongs(listBuilder)\n  }\n\n  const changeSongKey = event => {\n    const key = event.target.value\n    const song = event.target.name\n    var i\n    for (i = 0; i < listBuilder.length; i++) {\n      if (listBuilder[i].name === song) break\n    }\n    const leftPart = listBuilder.slice(0, i)\n    const rightPart = listBuilder.slice(i + 1, listBuilder.length)\n    const songToUpdate = {\n      name: listBuilder[i].name,\n      artist: listBuilder[i].artist,\n      key: key\n    }\n    const updatedArray = leftPart.concat([songToUpdate]).concat(rightPart)\n    setListBuilder(updatedArray)\n  }\n\n  const handleSpotifyPlaylistIdChange = event => {\n    const id = event.target.value\n    setSpotifyPlaylistId(id)\n  }\n\n  const importPlaylist = async () => {\n    const token = props.accessToken\n    props.initializeSpotifyTracks(spotifyPlaylistId, token)\n  }\n\n  const generateSongList = list => {\n    if (list === 'left') {\n      return (\n        <List>\n          {existingList.map(item => {\n            return (\n              <Song onClick={() => transferToList(item, list)}>\n                {item.name}\n              </Song>\n            )\n          })}\n        </List>\n      )\n    }\n    if (list === 'right') {\n      return (\n        <List>\n          {listBuilder.map(item => {\n            return (\n              <React.Fragment>\n                <Song onClick={() => transferToList(item, list)}>\n                  {item.name}\n                </Song>\n                <input\n                  type='text'\n                  value={item.key}\n                  name={item.name}\n                  onChange={changeSongKey}\n                ></input>\n              </React.Fragment>\n            )\n          })}\n        </List>\n      )\n    }\n  }\n\n  const generateButton = () => {\n    if (existingList.length === 0 && listBuilder.length === 0) {\n      return (\n        <div>\n          Playlist ID:\n          <Input\n            type='text'\n            value={spotifyPlaylistId}\n            onChange={handleSpotifyPlaylistIdChange}\n          ></Input>\n          <Button onClick={importPlaylist}>IMPORT PLAYLIST</Button>\n          <p>\n            In this demo version you can import Spotify playlists with the id of\n            your Spotify setlists.\n          </p>\n          <p>\n            1. Go to your Spotify account (Desktop, Mobile or Broweser) <br />\n            2. Double click your playlist <br />\n            3. Go to share <br />\n            4. Click copy Spotify URI <br />\n            5. Paste URI to the field above <br />\n            6. Remove \"spotify:playlist:\" -part <br />\n            7. Click IMPORT PLAYLIST\n          </p>\n        </div>\n      )\n    } else {\n      return <SaveButton onClick={saveSongs}>Save Songs</SaveButton>\n    }\n  }\n\n  return (\n    <div>\n      {generateButton()}\n      <ContainerLeft>{generateSongList('left')}</ContainerLeft>\n      <ContainerRight>{generateSongList('right')}</ContainerRight>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    tracks: state.spotifyTracks,\n    playlistId: state.platlistId,\n    accessToken: state.accessToken\n  }\n}\n\nexport default connect(mapStateToProps, { initializeSpotifyTracks })(ImportList)\n","import React from 'react'\nimport styled from 'styled-components'\nimport songService from './services/songService'\nimport { connect } from 'react-redux'\nimport { deleteSong } from './reducers/songReducer'\n\nconst Button = styled.button`\n  background: #ff4d4d;\n  border: 2px solid palevioletred;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  display: inline-block;\n  border-top-right-radius: 0px;\n  border-bottom-right-radius: 0px;\n`\nconst ButtonContainer = styled.div`\n  display: inline-block;\n  width: auto%;\n  height: 100%;\n`\n\nconst DeleteButton = props => {\n  const handleDeleteSong = id => {\n    props.deleteSong(id)\n    songService.deleteSong(id)\n  }\n\n  return (\n    <ButtonContainer>\n      <div onClick={() => handleDeleteSong(props.id)}>\n        <Button>DELETE</Button>\n      </div>\n    </ButtonContainer>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    allSongs: state.songs\n  }\n}\n\nexport default connect(mapStateToProps, { deleteSong })(DeleteButton)\n","import React, { useState } from 'react'\nimport Popup from 'reactjs-popup'\nimport styled from 'styled-components'\nimport './styles/popup.css'\nimport songService from './services/songService'\n\nconst Button = styled.button`\n  background: #e6f2ff;\n  border: 2px solid palevioletred;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n  display: inline-block;\n  border-top-left-radius: 0px;\n  border-bottom-left-radius: 0px;\n`\n\nconst inputStyle =\n  'border: 2px solid palevioletred; 1em;border-radius: 3px; margin: 10px; display: block !important;'\n\nconst Input = styled.input`\n  ${inputStyle}\n`\n/*const KeyInput = styled.input`\n  ${inputStyle}\n  margin-left: 20px;\n`*/\n\nconst EditSongPopup = props => {\n  const [songName, setSongName] = useState(props.name)\n  const [songArtist, setSongArtist] = useState(props.artist)\n  const [songKey, setSongKey] = useState(props.songKey)\n\n  const handleSongNameChange = event => {\n    const songName = event.target.value\n    setSongName(songName)\n  }\n\n  const handleSongArtistChange = event => {\n    const songArtist = event.target.value\n    setSongArtist(songArtist)\n  }\n\n  const handleSongKeyChange = event => {\n    const songKey = event.target.value\n    setSongKey(songKey)\n  }\n\n  const saveEditedSong = () => {\n    const Song = {\n      id: props.id,\n      name: songName,\n      artist: songArtist,\n      key: songKey\n    }\n    songService.sendEditedSong(Song)\n  }\n\n  return (\n    <Popup position='bottom center' trigger={<Button>EDIT</Button>}>\n      Name:\n      <Input\n        type='text'\n        value={songName}\n        onChange={handleSongNameChange}\n      ></Input>\n      Artist:\n      <Input\n        type='text'\n        value={songArtist}\n        onChange={handleSongArtistChange}\n      ></Input>\n      Key:\n      <Input type='text' value={songKey} onChange={handleSongKeyChange}></Input>\n      <Button onClick={saveEditedSong}>SAVE</Button>\n    </Popup>\n  )\n}\n\nexport default EditSongPopup\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport NewSongPopup from './NewSongPopup'\nimport DeleteButton from './DeleteButton'\nimport EditSongPopup from './EditSongPopup'\n\nconst Container = styled.div`\n  width: auto;\n  padding-left: 12%;\n  padding-right: 16%;\n  height: auto;\n  background: #daf7a6;\n`\n\nconst ButtonContainer = styled.div`\n  float: right;\n`\n\nconst List = styled.ul`\n  margin: auto;\n`\n\nconst Song = styled.div`\n  display: inline-block;\n  width: 70%;\n  height: 100%;\n`\n\nconst ListItem = styled.li`\n  list-style-type: none;\n  border: 2px solid palevioletred;\n  border-radius: 5px;\n  margin: 2px;\n`\n\nconst SongContainer = styled.div`\n  display: block;\n  width: auto;\n  margin: 0;\n  padding: 0;\n  white-space: nowrap;\n  overflow-x: auto;\n  overflow-y: hidden;\n`\n\nconst SelectorContainer = styled.div`\n  height: 24px;\n`\n\nconst ManageSongs = props => {\n  //const [allSongs, setAllSongs] = useState([])\n\n  useEffect(() => {\n    //setAllSongs(props.allSongs.songs)\n  }, [props])\n\n  const generateSongList = () => {\n    if (props.allSongs.songs !== undefined) {\n      return (\n        <List>\n          {props.allSongs.songs.map(item => {\n            return (\n              <ListItem key={item.id}>\n                <SongContainer>\n                  <Song>\n                    {item.name} - {item.key}\n                  </Song>\n                  <ButtonContainer>\n                    <DeleteButton id={item.id} />\n                    <EditSongPopup\n                      name={item.name}\n                      artist={item.artist}\n                      songKey={item.key}\n                      id={item.id}\n                    />\n                  </ButtonContainer>\n                </SongContainer>\n              </ListItem>\n            )\n          })}\n        </List>\n      )\n    }\n  }\n\n  return (\n    <div>\n      <Container>\n        <SelectorContainer>\n          <NewSongPopup />\n        </SelectorContainer>\n        {generateSongList()}\n      </Container>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    setlists: state.setlists,\n    allSongs: state.songs,\n    selectSetlist: state.selectSetlist\n  }\n}\n\nexport default connect(mapStateToProps)(ManageSongs)\n","import setlistService from '../services/setlistService'\n\nexport const initializeSetlists = () => {\n  return async dispatch => {\n    const setlist = await setlistService.getAllSetlists()\n    dispatch({\n      type: 'INIT_SETLISTS',\n      content: setlist\n    })\n  }\n}\n\nconst setlistReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_SETLISTS':\n      return state.concat(action.content)\n    default:\n      return state\n  }\n}\n\nexport default setlistReducer\n","export const createAccessToken = content => {\n  return {\n    type: 'CREATE_TOKEN',\n    content: content\n  }\n}\n\nconst accessTokenReducer = (state = '', action) => {\n  switch (action.type) {\n    case 'CREATE_TOKEN':\n      return action.content\n    default:\n      return state\n  }\n}\n\nexport default accessTokenReducer\n","import React from 'react'\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Welcome to Setlisted</h1>\n      <h2>Demo version 0.01 </h2> (Deployed 3rd of February 2020)\n      <h2>TODO Features:</h2>\n      <p>\n        -Users <br /> -Better styling <br /> -Placeholders in setlists <br />{' '}\n        -Changing the order of the songs in a setlist <br /> -Exporting a\n        setlist as PDF/JSON <br /> -Rendering user's Spotify playlists when\n        importing <br /> -Sorting and filtering Songs <br />\n      </p>\n      <p></p>\n    </div>\n  )\n}\n\nexport default Home\n","import React, { useEffect } from 'react'\nimport queryString from 'query-string'\nimport SongList from './SongList'\nimport ImportList from './ImportList'\nimport ManageSongs from './ManageSongs'\nimport { connect } from 'react-redux'\nimport { initializeSpotifyTracks } from './reducers/spotifyReducer'\nimport { initializeSetlists } from './reducers/setlistReducer'\nimport { initializeSongs } from './reducers/songReducer'\nimport { createAccessToken } from './reducers/accessTokenReducer'\nimport { setSelectSetlist } from './reducers/selectSetlistReducer'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link /*,\n  Redirect,\n  withRouter*/\n} from 'react-router-dom'\nimport Home from './Home'\nimport styled from 'styled-components'\n\nconst Page = styled.div`\n  background: #daf7a6;\n  height: 1000px;\n  text-align: center;\n`\n\nconst NavBar = styled.div`\n  padding: 20px;\n`\n\nconst linkStyle = {\n  textDecoration: 'none',\n  padding: '10px'\n}\n\nconst App = props => {\n  useEffect(() => {\n    props.initializeSetlists()\n    props.initializeSongs()\n    props.setSelectSetlist('default')\n    if (queryString.parse(window.location.search).access_token !== undefined) {\n      props.createAccessToken(\n        queryString.parse(window.location.search).access_token\n      )\n    }\n  }, [props])\n\n  return (\n    <Page>\n      <Router>\n        <div>\n          <NavBar>\n            <Link style={linkStyle} to='/'>\n              HOME\n            </Link>\n            <Link style={linkStyle} to='/setlists'>\n              SETLISTS\n            </Link>\n            <Link style={linkStyle} to='/import'>\n              IMPORT\n            </Link>\n            <Link style={linkStyle} to='/manage'>\n              MANAGE SONGS\n            </Link>\n          </NavBar>\n\n          <Route exact path='/' render={() => <Home />} />\n          <Route exact path='/setlists' render={() => <SongList />} />\n          <Route exact path='/import' render={() => <ImportList />} />\n          <Route exact path='/manage' render={() => <ManageSongs />} />\n        </div>\n      </Router>\n    </Page>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    spotifyPlaylistId: state.playlistId,\n    accessToken: state.accessToken\n  }\n}\n\nexport default connect(mapStateToProps, {\n  initializeSpotifyTracks,\n  initializeSetlists,\n  initializeSongs,\n  createAccessToken,\n  setSelectSetlist\n})(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux'\nimport spotifyReducer from './reducers/spotifyReducer'\nimport setlistReducer from './reducers/setlistReducer'\nimport accessTokenReducer from './reducers/accessTokenReducer'\nimport songReducer from './reducers/songReducer'\nimport selectSetlistReducer from './reducers/selectSetlistReducer'\nimport { createStore, compose, applyMiddleware, combineReducers } from 'redux'\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst reducer = combineReducers({\n  spotifyTracks: spotifyReducer,\n  setlists: setlistReducer,\n  accessToken: accessTokenReducer,\n  songs: songReducer,\n  selectSetlist: selectSetlistReducer\n})\n\nconst store = createStore(reducer, composeEnhancer(applyMiddleware(thunk)))\n\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  )\n}\n\nrender()\nstore.subscribe(render)\n"],"sourceRoot":""}